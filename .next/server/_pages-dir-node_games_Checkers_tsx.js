"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_games_Checkers_tsx";
exports.ids = ["_pages-dir-node_games_Checkers_tsx"];
exports.modules = {

/***/ "(pages-dir-node)/./games/Checkers.tsx":
/*!****************************!*\
  !*** ./games/Checkers.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_2__]);\naxios__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/**\n * Checkers Game Implementation with Double/Multiple Jump Support\n * \n * Features:\n * - Standard checkers rules with 8x8 board\n * - King promotion when reaching opposite end\n * - Forced captures (must jump if available)\n * - Double/Multiple jumps (must continue jumping if additional captures available)\n * - AI opponent with capture prioritization\n * - Visual indicators for selected pieces, valid moves, and forced jumps\n * - Score tracking and game over detection\n */ \n\n\nconst BOARD_SIZE = 8;\nconst Checkers = ({ onExit })=>{\n    const [board, setBoard] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"Checkers.useState\": ()=>initializeBoard()\n    }[\"Checkers.useState\"]);\n    const [currentPlayer, setCurrentPlayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [selectedPosition, setSelectedPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [validMoves, setValidMoves] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [gameOver, setGameOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [winner, setWinner] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [player1Score, setPlayer1Score] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(12);\n    const [player2Score, setPlayer2Score] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(12);\n    const [vsAI, setVsAI] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [mustJumpFrom, setMustJumpFrom] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Track piece that must continue jumping\n    function initializeBoard() {\n        const board = Array(BOARD_SIZE).fill(null).map(()=>Array(BOARD_SIZE).fill(null));\n        // Place player 2 pieces (top)\n        for(let row = 0; row < 3; row++){\n            for(let col = 0; col < BOARD_SIZE; col++){\n                if ((row + col) % 2 === 1) {\n                    board[row][col] = {\n                        player: 2,\n                        isKing: false\n                    };\n                }\n            }\n        }\n        // Place player 1 pieces (bottom)\n        for(let row = 5; row < BOARD_SIZE; row++){\n            for(let col = 0; col < BOARD_SIZE; col++){\n                if ((row + col) % 2 === 1) {\n                    board[row][col] = {\n                        player: 1,\n                        isKing: false\n                    };\n                }\n            }\n        }\n        return board;\n    }\n    // Update scores when board changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"Checkers.useEffect\": ()=>{\n            const player1Pieces = board.flat().filter({\n                \"Checkers.useEffect\": (p)=>p && p.player === 1\n            }[\"Checkers.useEffect\"]).length;\n            const player2Pieces = board.flat().filter({\n                \"Checkers.useEffect\": (p)=>p && p.player === 2\n            }[\"Checkers.useEffect\"]).length;\n            setPlayer1Score(player1Pieces);\n            setPlayer2Score(player2Pieces);\n        }\n    }[\"Checkers.useEffect\"], [\n        board\n    ]);\n    // Check if a piece can capture from a specific position\n    const getCaptures = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Checkers.useCallback[getCaptures]\": (board, position)=>{\n            const piece = board[position.row][position.col];\n            if (!piece) return [];\n            const captures = [];\n            const { row, col } = position;\n            const directions = piece.isKing ? [\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    1\n                ],\n                [\n                    1,\n                    -1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ] : piece.player === 1 ? [\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    1\n                ]\n            ] : [\n                [\n                    1,\n                    -1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ];\n            for (const [dRow, dCol] of directions){\n                const adjacentRow = row + dRow;\n                const adjacentCol = col + dCol;\n                if (adjacentRow >= 0 && adjacentRow < BOARD_SIZE && adjacentCol >= 0 && adjacentCol < BOARD_SIZE) {\n                    const adjacentPiece = board[adjacentRow][adjacentCol];\n                    if (adjacentPiece && adjacentPiece.player !== piece.player) {\n                        const jumpRow = adjacentRow + dRow;\n                        const jumpCol = adjacentCol + dCol;\n                        if (jumpRow >= 0 && jumpRow < BOARD_SIZE && jumpCol >= 0 && jumpCol < BOARD_SIZE && !board[jumpRow][jumpCol]) {\n                            captures.push({\n                                row: jumpRow,\n                                col: jumpCol\n                            });\n                        }\n                    }\n                }\n            }\n            return captures;\n        }\n    }[\"Checkers.useCallback[getCaptures]\"], []);\n    const getValidMoves = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Checkers.useCallback[getValidMoves]\": (board, position, capturesOnly = false)=>{\n            const piece = board[position.row][position.col];\n            if (!piece) return [];\n            const moves = [];\n            const { row, col } = position;\n            const directions = piece.isKing ? [\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    1\n                ],\n                [\n                    1,\n                    -1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ] : piece.player === 1 ? [\n                [\n                    -1,\n                    -1\n                ],\n                [\n                    -1,\n                    1\n                ]\n            ] : [\n                [\n                    1,\n                    -1\n                ],\n                [\n                    1,\n                    1\n                ]\n            ];\n            // Check for captures first\n            const captures = getCaptures(board, position);\n            if (captures.length > 0) {\n                return captures; // Must capture if available\n            }\n            // If we're only looking for captures or if a piece must continue jumping, return empty\n            if (capturesOnly || mustJumpFrom) {\n                return [];\n            }\n            // Regular moves (only if no captures available)\n            for (const [dRow, dCol] of directions){\n                const newRow = row + dRow;\n                const newCol = col + dCol;\n                if (newRow >= 0 && newRow < BOARD_SIZE && newCol >= 0 && newCol < BOARD_SIZE && !board[newRow][newCol]) {\n                    moves.push({\n                        row: newRow,\n                        col: newCol\n                    });\n                }\n            }\n            return moves;\n        }\n    }[\"Checkers.useCallback[getValidMoves]\"], [\n        getCaptures,\n        mustJumpFrom\n    ]);\n    const makeMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Checkers.useCallback[makeMove]\": (from, to)=>{\n            const newBoard = board.map({\n                \"Checkers.useCallback[makeMove].newBoard\": (row)=>[\n                        ...row\n                    ]\n            }[\"Checkers.useCallback[makeMove].newBoard\"]);\n            const piece = newBoard[from.row][from.col];\n            // Check if it's a capture move\n            const rowDiff = Math.abs(to.row - from.row);\n            let isCapture = false;\n            if (rowDiff === 2) {\n                isCapture = true;\n                const captureRow = from.row + (to.row - from.row) / 2;\n                const captureCol = from.col + (to.col - from.col) / 2;\n                newBoard[captureRow][captureCol] = null;\n            }\n            // Move piece\n            newBoard[to.row][to.col] = piece;\n            newBoard[from.row][from.col] = null;\n            // Check for king promotion\n            if (!piece.isKing) {\n                if (piece.player === 1 && to.row === 0 || piece.player === 2 && to.row === 7) {\n                    newBoard[to.row][to.col].isKing = true;\n                }\n            }\n            setBoard(newBoard);\n            // If it was a capture, check for additional captures (double/multi jumps)\n            if (isCapture) {\n                const additionalCaptures = getCaptures(newBoard, to);\n                if (additionalCaptures.length > 0) {\n                    // Must continue jumping with the same piece\n                    setMustJumpFrom(to);\n                    setSelectedPosition(to);\n                    setValidMoves(additionalCaptures);\n                    return; // Don't switch players yet\n                }\n            }\n            // Reset forced jump state\n            setMustJumpFrom(null);\n            setSelectedPosition(null);\n            setValidMoves([]);\n            // Check for win condition\n            const player1Pieces = newBoard.flat().filter({\n                \"Checkers.useCallback[makeMove]\": (p)=>p && p.player === 1\n            }[\"Checkers.useCallback[makeMove]\"]).length;\n            const player2Pieces = newBoard.flat().filter({\n                \"Checkers.useCallback[makeMove]\": (p)=>p && p.player === 2\n            }[\"Checkers.useCallback[makeMove]\"]).length;\n            if (player1Pieces === 0) {\n                setWinner(2);\n                setGameOver(true);\n            } else if (player2Pieces === 0) {\n                setWinner(1);\n                setGameOver(true);\n            } else {\n                setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n            }\n        }\n    }[\"Checkers.useCallback[makeMove]\"], [\n        board,\n        currentPlayer,\n        getCaptures\n    ]);\n    // Get all possible moves for a player, prioritizing captures\n    const getAllPossibleMoves = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Checkers.useCallback[getAllPossibleMoves]\": (board, player)=>{\n            const moves = [];\n            let hasCaptures = false;\n            // First pass: look for captures\n            for(let row = 0; row < BOARD_SIZE; row++){\n                for(let col = 0; col < BOARD_SIZE; col++){\n                    const piece = board[row][col];\n                    if (piece && piece.player === player) {\n                        const captures = getCaptures(board, {\n                            row,\n                            col\n                        });\n                        if (captures.length > 0) {\n                            hasCaptures = true;\n                            captures.forEach({\n                                \"Checkers.useCallback[getAllPossibleMoves]\": (capture)=>{\n                                    moves.push({\n                                        from: {\n                                            row,\n                                            col\n                                        },\n                                        to: capture\n                                    });\n                                }\n                            }[\"Checkers.useCallback[getAllPossibleMoves]\"]);\n                        }\n                    }\n                }\n            }\n            // If there are captures available, only return captures (forced jumps)\n            if (hasCaptures) {\n                return moves;\n            }\n            // Second pass: regular moves (only if no captures available)\n            for(let row = 0; row < BOARD_SIZE; row++){\n                for(let col = 0; col < BOARD_SIZE; col++){\n                    const piece = board[row][col];\n                    if (piece && piece.player === player) {\n                        const regularMoves = getValidMoves(board, {\n                            row,\n                            col\n                        }, false);\n                        regularMoves.forEach({\n                            \"Checkers.useCallback[getAllPossibleMoves]\": (move)=>{\n                                moves.push({\n                                    from: {\n                                        row,\n                                        col\n                                    },\n                                    to: move\n                                });\n                            }\n                        }[\"Checkers.useCallback[getAllPossibleMoves]\"]);\n                    }\n                }\n            }\n            return moves;\n        }\n    }[\"Checkers.useCallback[getAllPossibleMoves]\"], [\n        getCaptures,\n        getValidMoves\n    ]);\n    // AI move logic\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"Checkers.useEffect\": ()=>{\n            if (!vsAI || gameOver || currentPlayer !== 2) return;\n            // If AI must continue jumping, handle that first\n            if (mustJumpFrom && mustJumpFrom) {\n                const captures = getCaptures(board, mustJumpFrom);\n                if (captures.length > 0) {\n                    setTimeout({\n                        \"Checkers.useEffect\": ()=>{\n                            // Use backend AI for forced jump\n                            makeAIMove(mustJumpFrom, captures);\n                        }\n                    }[\"Checkers.useEffect\"], 1000);\n                    return;\n                }\n            }\n            const aiMoves = getAllPossibleMoves(board, 2);\n            if (aiMoves.length > 0) {\n                setTimeout({\n                    \"Checkers.useEffect\": ()=>{\n                        // Use backend AI for move selection\n                        makeAIMove(null, aiMoves.map({\n                            \"Checkers.useEffect\": (m)=>m.to\n                        }[\"Checkers.useEffect\"]));\n                    }\n                }[\"Checkers.useEffect\"], 1000);\n            }\n        }\n    }[\"Checkers.useEffect\"], [\n        vsAI,\n        gameOver,\n        currentPlayer,\n        board,\n        mustJumpFrom,\n        getAllPossibleMoves,\n        makeMove,\n        getCaptures\n    ]);\n    // Backend AI move function\n    const makeAIMove = async (from, possibleMoves)=>{\n        try {\n            // Prepare a simple board state for the backend\n            const boardState = board.map((row)=>row.map((piece)=>{\n                    if (!piece) return null;\n                    return {\n                        player: piece.player,\n                        isKing: piece.isKing\n                    };\n                }));\n            const payload = {\n                board: boardState,\n                currentPlayer: 2,\n                mustJumpFrom: from,\n                possibleMoves,\n                systemPrompt: CHECKERS_SYSTEM_PROMPT\n            };\n            const res = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post('/api/ask-ai', {\n                checkers: payload\n            });\n            // Accept both { move: {row, col} } and { from: {row, col}, to: {row, col} }\n            if (res.data && res.data.move) {\n                // If AI returns just the move (to position), find the corresponding from position\n                let moveTo = res.data.move;\n                let moveFrom = from;\n                if (!moveFrom) {\n                    // Try to find the move in all possible moves\n                    const moveObj = getAllPossibleMoves(board, 2).find((m)=>m.to.row === moveTo.row && m.to.col === moveTo.col);\n                    if (moveObj) moveFrom = moveObj.from;\n                }\n                if (moveFrom && moveTo) {\n                    makeMove(moveFrom, moveTo);\n                    return;\n                }\n            } else if (res.data && res.data.from && res.data.to) {\n                makeMove(res.data.from, res.data.to);\n                return;\n            }\n            // fallback: pick random move\n            if (from && possibleMoves.length > 0) {\n                const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n                makeMove(from, randomMove);\n            } else if (possibleMoves.length > 0) {\n                const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n                const moveObj = getAllPossibleMoves(board, 2).find((m)=>m.to.row === randomMove.row && m.to.col === randomMove.col);\n                if (moveObj) makeMove(moveObj.from, moveObj.to);\n            }\n        } catch (e) {\n            // fallback: pick random move\n            if (from && possibleMoves.length > 0) {\n                const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n                makeMove(from, randomMove);\n            } else if (possibleMoves.length > 0) {\n                const randomMove = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n                const moveObj = getAllPossibleMoves(board, 2).find((m)=>m.to.row === randomMove.row && m.to.col === randomMove.col);\n                if (moveObj) makeMove(moveObj.from, moveObj.to);\n            }\n        }\n    };\n    const handleSquareClick = (row, col)=>{\n        if (gameOver) return;\n        const piece = board[row][col];\n        // If we must jump from a specific piece, only allow that piece to be selected\n        if (mustJumpFrom) {\n            if (selectedPosition) {\n                // Try to make a jump move\n                const isValid = validMoves.some((m)=>m.row === row && m.col === col);\n                if (isValid) {\n                    makeMove(selectedPosition, {\n                        row,\n                        col\n                    });\n                }\n            // Don't allow deselection during forced jumps\n            } else if (piece && mustJumpFrom.row === row && mustJumpFrom.col === col) {\n                // Only allow selecting the piece that must continue jumping\n                setSelectedPosition({\n                    row,\n                    col\n                });\n                setValidMoves(getCaptures(board, {\n                    row,\n                    col\n                }));\n            }\n            return;\n        }\n        if (selectedPosition) {\n            // Try to move\n            const isValid = validMoves.some((m)=>m.row === row && m.col === col);\n            if (isValid) {\n                makeMove(selectedPosition, {\n                    row,\n                    col\n                });\n            } else if (piece && piece.player === currentPlayer && (!vsAI || currentPlayer === 1)) {\n                // Select new piece\n                setSelectedPosition({\n                    row,\n                    col\n                });\n                setValidMoves(getValidMoves(board, {\n                    row,\n                    col\n                }));\n            } else {\n                // Deselect\n                setSelectedPosition(null);\n                setValidMoves([]);\n            }\n        } else if (piece && piece.player === currentPlayer && (!vsAI || currentPlayer === 1)) {\n            // Select piece\n            setSelectedPosition({\n                row,\n                col\n            });\n            setValidMoves(getValidMoves(board, {\n                row,\n                col\n            }));\n        }\n    };\n    const resetGame = ()=>{\n        setBoard(initializeBoard());\n        setCurrentPlayer(1);\n        setSelectedPosition(null);\n        setValidMoves([]);\n        setGameOver(false);\n        setWinner(null);\n        setPlayer1Score(12);\n        setPlayer2Score(12);\n        setMustJumpFrom(null); // Reset forced jump state\n    };\n    // Test function to set up a double jump scenario\n    const setupDoubleJumpTest = ()=>{\n        const testBoard = Array(BOARD_SIZE).fill(null).map(()=>Array(BOARD_SIZE).fill(null));\n        // Set up a scenario where player 1 can make a double jump\n        testBoard[5][0] = {\n            player: 1,\n            isKing: false\n        }; // Player 1 piece\n        testBoard[4][1] = {\n            player: 2,\n            isKing: false\n        }; // First opponent piece to jump\n        testBoard[2][3] = {\n            player: 2,\n            isKing: false\n        }; // Second opponent piece to jump\n        // Add some other pieces for context\n        testBoard[7][2] = {\n            player: 1,\n            isKing: false\n        };\n        testBoard[0][1] = {\n            player: 2,\n            isKing: false\n        };\n        testBoard[0][3] = {\n            player: 2,\n            isKing: false\n        };\n        setBoard(testBoard);\n        setCurrentPlayer(1);\n        setSelectedPosition(null);\n        setValidMoves([]);\n        setGameOver(false);\n        setWinner(null);\n        setMustJumpFrom(null);\n        // Update scores based on test board\n        const player1Pieces = testBoard.flat().filter((p)=>p && p.player === 1).length;\n        const player2Pieces = testBoard.flat().filter((p)=>p && p.player === 2).length;\n        setPlayer1Score(player1Pieces);\n        setPlayer2Score(player2Pieces);\n    };\n    // Instruct the AI to play as strongly as possible\n    const CHECKERS_SYSTEM_PROMPT = 'You are a checkers AI. Play as strongly as possible. Given the current board and possible moves, select the best move for the player. Respond ONLY with the move object as JSON.';\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"checkers-bg\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"checkers-container\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"checkers-status\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"checkers-player-info\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"checkers-player-name\",\n                                    children: \"Player 1\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                    lineNumber: 425,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"checkers-player-score\",\n                                    children: [\n                                        \"Pieces: \",\n                                        player1Score\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                    lineNumber: 426,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 424,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"checkers-turn-indicator\",\n                            children: gameOver ? `Game Over!` : mustJumpFrom ? `Player ${currentPlayer} must continue jumping!` : `Player ${currentPlayer}'s Turn`\n                        }, void 0, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 428,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"checkers-player-info\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"checkers-player-name\",\n                                    children: vsAI ? 'AI' : 'Player 2'\n                                }, void 0, false, {\n                                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                    lineNumber: 432,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"checkers-player-score\",\n                                    children: [\n                                        \"Pieces: \",\n                                        player2Score\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                    lineNumber: 433,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 431,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                    lineNumber: 423,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"checkers-board\",\n                    children: board.map((row, rowIndex)=>row.map((piece, colIndex)=>{\n                            const isSelected = selectedPosition?.row === rowIndex && selectedPosition?.col === colIndex;\n                            const isValidMove = validMoves.some((m)=>m.row === rowIndex && m.col === colIndex);\n                            const isMustJump = mustJumpFrom?.row === rowIndex && mustJumpFrom?.col === colIndex;\n                            const isDarkSquare = (rowIndex + colIndex) % 2 === 1;\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: `checkers-square ${isSelected ? 'selected' : ''} ${isValidMove ? 'valid-move' : ''} ${isMustJump ? 'must-jump' : ''}`,\n                                style: {\n                                    backgroundColor: isDarkSquare ? '#8b4513' : '#f5deb3'\n                                },\n                                onClick: ()=>handleSquareClick(rowIndex, colIndex),\n                                children: piece && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: `checkers-piece player${piece.player} ${piece.isKing ? 'king' : ''}`,\n                                    children: piece.isKing ? '♔' : piece.player === 1 ? '●' : '●'\n                                }, void 0, false, {\n                                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                    lineNumber: 456,\n                                    columnNumber: 21\n                                }, undefined)\n                            }, `${rowIndex}-${colIndex}`, false, {\n                                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                lineNumber: 447,\n                                columnNumber: 17\n                            }, undefined);\n                        }))\n                }, void 0, false, {\n                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                    lineNumber: 438,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"checkers-controls\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                            onClick: ()=>setVsAI(!vsAI),\n                            children: vsAI ? 'Play vs Human' : 'Play vs AI'\n                        }, void 0, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 468,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                            onClick: resetGame,\n                            children: \"New Game\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 474,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                            onClick: setupDoubleJumpTest,\n                            style: {\n                                backgroundColor: '#ff6b35'\n                            },\n                            children: \"Test Double Jump\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 477,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                            onClick: onExit,\n                            children: \"Exit Game\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                            lineNumber: 484,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                    lineNumber: 467,\n                    columnNumber: 9\n                }, undefined),\n                gameOver && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"checkers-overlay\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"checkers-message\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: \"Game Over!\"\n                            }, void 0, false, {\n                                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                lineNumber: 493,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"Winner: \",\n                                    winner === 1 ? 'Player 1' : vsAI ? 'AI' : 'Player 2'\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                lineNumber: 494,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"checkers-controls\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                                        onClick: resetGame,\n                                        children: \"Play Again\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                        lineNumber: 496,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                                        onClick: onExit,\n                                        children: \"Return to Menu\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                        lineNumber: 499,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                                lineNumber: 495,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                        lineNumber: 492,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n                    lineNumber: 491,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n            lineNumber: 421,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/Checkers.tsx\",\n        lineNumber: 420,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Checkers);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./games/Checkers.tsx\n");

/***/ })

};
;