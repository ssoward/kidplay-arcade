"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_pages-dir-node_games_MindSweep_tsx";
exports.ids = ["_pages-dir-node_games_MindSweep_tsx"];
exports.modules = {

/***/ "(pages-dir-node)/./games/MindSweep.tsx":
/*!*****************************!*\
  !*** ./games/MindSweep.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst difficulties = {\n    easy: {\n        rows: 9,\n        cols: 9,\n        mines: 10\n    },\n    medium: {\n        rows: 12,\n        cols: 12,\n        mines: 20\n    },\n    hard: {\n        rows: 15,\n        cols: 15,\n        mines: 40\n    }\n};\nconst MindSweep = ()=>{\n    const defaultConfig = difficulties['easy'];\n    const [grid, setGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Array(defaultConfig.rows).fill(null).map({\n        \"MindSweep.useState\": ()=>Array(defaultConfig.cols).fill(null).map({\n                \"MindSweep.useState\": ()=>({\n                        isMine: false,\n                        isRevealed: false,\n                        isFlagged: false,\n                        neighborCount: 0\n                    })\n            }[\"MindSweep.useState\"])\n    }[\"MindSweep.useState\"]));\n    const [gameStatus, setGameStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('playing');\n    const [mineCount, setMineCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(10);\n    const [flagCount, setFlagCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [difficulty, setDifficulty] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('easy');\n    const [firstClick, setFirstClick] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [timer, setTimer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isRunning, setIsRunning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MindSweep.useEffect\": ()=>{\n            let interval;\n            if (isRunning && gameStatus === 'playing') {\n                interval = setInterval({\n                    \"MindSweep.useEffect\": ()=>{\n                        setTimer({\n                            \"MindSweep.useEffect\": (prev)=>prev + 1\n                        }[\"MindSweep.useEffect\"]);\n                    }\n                }[\"MindSweep.useEffect\"], 1000);\n            }\n            return ({\n                \"MindSweep.useEffect\": ()=>clearInterval(interval)\n            })[\"MindSweep.useEffect\"];\n        }\n    }[\"MindSweep.useEffect\"], [\n        isRunning,\n        gameStatus\n    ]);\n    const createEmptyGrid = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[createEmptyGrid]\": (rows, cols)=>{\n            return Array(rows).fill(null).map({\n                \"MindSweep.useCallback[createEmptyGrid]\": ()=>Array(cols).fill(null).map({\n                        \"MindSweep.useCallback[createEmptyGrid]\": ()=>({\n                                isMine: false,\n                                isRevealed: false,\n                                isFlagged: false,\n                                neighborCount: 0\n                            })\n                    }[\"MindSweep.useCallback[createEmptyGrid]\"])\n            }[\"MindSweep.useCallback[createEmptyGrid]\"]);\n        }\n    }[\"MindSweep.useCallback[createEmptyGrid]\"], []);\n    const placeMines = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[placeMines]\": (grid, mineCount, excludeRow, excludeCol)=>{\n            const rows = grid.length;\n            const cols = grid[0].length;\n            const newGrid = grid.map({\n                \"MindSweep.useCallback[placeMines].newGrid\": (row)=>row.map({\n                        \"MindSweep.useCallback[placeMines].newGrid\": (cell)=>({\n                                ...cell\n                            })\n                    }[\"MindSweep.useCallback[placeMines].newGrid\"])\n            }[\"MindSweep.useCallback[placeMines].newGrid\"]);\n            let minesPlaced = 0;\n            while(minesPlaced < mineCount){\n                const row = Math.floor(Math.random() * rows);\n                const col = Math.floor(Math.random() * cols);\n                if (newGrid[row][col].isMine) continue;\n                const isAdjacent = Math.abs(row - excludeRow) <= 1 && Math.abs(col - excludeCol) <= 1;\n                if (isAdjacent) continue;\n                newGrid[row][col].isMine = true;\n                minesPlaced++;\n            }\n            return newGrid;\n        }\n    }[\"MindSweep.useCallback[placeMines]\"], []);\n    const calculateNeighbors = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[calculateNeighbors]\": (grid)=>{\n            const rows = grid.length;\n            const cols = grid[0].length;\n            const newGrid = grid.map({\n                \"MindSweep.useCallback[calculateNeighbors].newGrid\": (row)=>row.map({\n                        \"MindSweep.useCallback[calculateNeighbors].newGrid\": (cell)=>({\n                                ...cell\n                            })\n                    }[\"MindSweep.useCallback[calculateNeighbors].newGrid\"])\n            }[\"MindSweep.useCallback[calculateNeighbors].newGrid\"]);\n            for(let row = 0; row < rows; row++){\n                for(let col = 0; col < cols; col++){\n                    if (!newGrid[row][col].isMine) {\n                        let count = 0;\n                        for(let dr = -1; dr <= 1; dr++){\n                            for(let dc = -1; dc <= 1; dc++){\n                                if (dr === 0 && dc === 0) continue;\n                                const newRow = row + dr;\n                                const newCol = col + dc;\n                                if (newRow >= 0 && newRow < rows && newCol >= 0 && newCol < cols) {\n                                    if (newGrid[newRow][newCol].isMine) {\n                                        count++;\n                                    }\n                                }\n                            }\n                        }\n                        newGrid[row][col].neighborCount = count;\n                    }\n                }\n            }\n            return newGrid;\n        }\n    }[\"MindSweep.useCallback[calculateNeighbors]\"], []);\n    const initializeGame = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[initializeGame]\": ()=>{\n            const config = difficulties[difficulty];\n            const emptyGrid = createEmptyGrid(config.rows, config.cols);\n            setGrid(emptyGrid);\n            setGameStatus('playing');\n            setMineCount(config.mines);\n            setFlagCount(0);\n            setFirstClick(true);\n            setTimer(0);\n            setIsRunning(false);\n        }\n    }[\"MindSweep.useCallback[initializeGame]\"], [\n        difficulty,\n        createEmptyGrid\n    ]);\n    const revealCellRecursively = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[revealCellRecursively]\": (grid, row, col)=>{\n            const rows = grid.length;\n            const cols = grid[0].length;\n            if (row < 0 || row >= rows || col < 0 || col >= cols) return grid;\n            if (grid[row][col].isRevealed || grid[row][col].isFlagged) return grid;\n            grid[row][col].isRevealed = true;\n            if (grid[row][col].neighborCount === 0 && !grid[row][col].isMine) {\n                for(let dr = -1; dr <= 1; dr++){\n                    for(let dc = -1; dc <= 1; dc++){\n                        if (dr === 0 && dc === 0) continue;\n                        revealCellRecursively(grid, row + dr, col + dc);\n                    }\n                }\n            }\n            return grid;\n        }\n    }[\"MindSweep.useCallback[revealCellRecursively]\"], []);\n    const handleCellClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[handleCellClick]\": (row, col)=>{\n            if (gameStatus !== 'playing') return;\n            setGrid({\n                \"MindSweep.useCallback[handleCellClick]\": (prevGrid)=>{\n                    let newGrid = prevGrid.map({\n                        \"MindSweep.useCallback[handleCellClick].newGrid\": (r)=>r.map({\n                                \"MindSweep.useCallback[handleCellClick].newGrid\": (c)=>({\n                                        ...c\n                                    })\n                            }[\"MindSweep.useCallback[handleCellClick].newGrid\"])\n                    }[\"MindSweep.useCallback[handleCellClick].newGrid\"]);\n                    if (firstClick) {\n                        newGrid = placeMines(newGrid, mineCount, row, col);\n                        newGrid = calculateNeighbors(newGrid);\n                        setFirstClick(false);\n                        setIsRunning(true);\n                    }\n                    const cell = newGrid[row][col];\n                    if (cell.isRevealed || cell.isFlagged) return newGrid;\n                    if (cell.isMine) {\n                        newGrid.forEach({\n                            \"MindSweep.useCallback[handleCellClick]\": (r)=>{\n                                r.forEach({\n                                    \"MindSweep.useCallback[handleCellClick]\": (c)=>{\n                                        if (c.isMine) c.isRevealed = true;\n                                    }\n                                }[\"MindSweep.useCallback[handleCellClick]\"]);\n                            }\n                        }[\"MindSweep.useCallback[handleCellClick]\"]);\n                        setGameStatus('lost');\n                        setIsRunning(false);\n                        return newGrid;\n                    }\n                    newGrid = revealCellRecursively(newGrid, row, col);\n                    const hasWon = newGrid.every({\n                        \"MindSweep.useCallback[handleCellClick].hasWon\": (r)=>r.every({\n                                \"MindSweep.useCallback[handleCellClick].hasWon\": (c)=>c.isMine || c.isRevealed\n                            }[\"MindSweep.useCallback[handleCellClick].hasWon\"])\n                    }[\"MindSweep.useCallback[handleCellClick].hasWon\"]);\n                    if (hasWon) {\n                        setGameStatus('won');\n                        setIsRunning(false);\n                        newGrid.forEach({\n                            \"MindSweep.useCallback[handleCellClick]\": (r)=>{\n                                r.forEach({\n                                    \"MindSweep.useCallback[handleCellClick]\": (c)=>{\n                                        if (c.isMine && !c.isFlagged) {\n                                            c.isFlagged = true;\n                                            setFlagCount({\n                                                \"MindSweep.useCallback[handleCellClick]\": (prev)=>prev + 1\n                                            }[\"MindSweep.useCallback[handleCellClick]\"]);\n                                        }\n                                    }\n                                }[\"MindSweep.useCallback[handleCellClick]\"]);\n                            }\n                        }[\"MindSweep.useCallback[handleCellClick]\"]);\n                    }\n                    return newGrid;\n                }\n            }[\"MindSweep.useCallback[handleCellClick]\"]);\n        }\n    }[\"MindSweep.useCallback[handleCellClick]\"], [\n        gameStatus,\n        firstClick,\n        mineCount,\n        placeMines,\n        calculateNeighbors,\n        revealCellRecursively\n    ]);\n    const handleRightClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[handleRightClick]\": (e, row, col)=>{\n            e.preventDefault();\n            if (gameStatus !== 'playing') return;\n            setGrid({\n                \"MindSweep.useCallback[handleRightClick]\": (prevGrid)=>{\n                    const newGrid = prevGrid.map({\n                        \"MindSweep.useCallback[handleRightClick].newGrid\": (r)=>r.map({\n                                \"MindSweep.useCallback[handleRightClick].newGrid\": (c)=>({\n                                        ...c\n                                    })\n                            }[\"MindSweep.useCallback[handleRightClick].newGrid\"])\n                    }[\"MindSweep.useCallback[handleRightClick].newGrid\"]);\n                    const cell = newGrid[row][col];\n                    if (cell.isRevealed) return newGrid;\n                    if (cell.isFlagged) {\n                        cell.isFlagged = false;\n                        setFlagCount({\n                            \"MindSweep.useCallback[handleRightClick]\": (prev)=>prev - 1\n                        }[\"MindSweep.useCallback[handleRightClick]\"]);\n                    } else {\n                        cell.isFlagged = true;\n                        setFlagCount({\n                            \"MindSweep.useCallback[handleRightClick]\": (prev)=>prev + 1\n                        }[\"MindSweep.useCallback[handleRightClick]\"]);\n                    }\n                    return newGrid;\n                }\n            }[\"MindSweep.useCallback[handleRightClick]\"]);\n        }\n    }[\"MindSweep.useCallback[handleRightClick]\"], [\n        gameStatus\n    ]);\n    const changeDifficulty = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"MindSweep.useCallback[changeDifficulty]\": (newDifficulty)=>{\n            setDifficulty(newDifficulty);\n        }\n    }[\"MindSweep.useCallback[changeDifficulty]\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MindSweep.useEffect\": ()=>{\n            initializeGame();\n        }\n    }[\"MindSweep.useEffect\"], [\n        initializeGame\n    ]);\n    const getCellContent = (cell)=>{\n        if (cell.isRevealed) {\n            return cell.isMine ? '💣' : cell.neighborCount > 0 ? cell.neighborCount.toString() : '';\n        }\n        return cell.isFlagged ? '🚩' : '';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mind-sweep\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Mind Sweep\"\n            }, void 0, false, {\n                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                lineNumber: 240,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"game-info\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Timer: \",\n                            timer,\n                            \"s\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 242,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Mines Left: \",\n                            mineCount - flagCount\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 243,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Status: \",\n                            gameStatus === 'playing' ? 'In Progress' : gameStatus === 'won' ? 'You Won!' : 'You Lost!'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 244,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                lineNumber: 241,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"difficulty\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                        onClick: ()=>changeDifficulty('easy'),\n                        children: \"Easy\"\n                    }, void 0, false, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 247,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                        onClick: ()=>changeDifficulty('medium'),\n                        children: \"Medium\"\n                    }, void 0, false, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 248,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"chess-btn bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 disabled:opacity-60 mt-2 ml-2\",\n                        onClick: ()=>changeDifficulty('hard'),\n                        children: \"Hard\"\n                    }, void 0, false, {\n                        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                        lineNumber: 249,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                lineNumber: 246,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid\",\n                style: {\n                    display: 'grid',\n                    gridTemplateRows: `repeat(${grid.length}, 1fr)`,\n                    gridTemplateColumns: `repeat(${grid[0]?.length || 0}, minmax(32px, 1fr))`,\n                    border: '2px solid #888',\n                    background: '#bdbdbd',\n                    minHeight: '40vw',\n                    minWidth: '40vw',\n                    maxWidth: '98vw',\n                    maxHeight: '98vw',\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    boxSizing: 'border-box',\n                    gap: '2vw',\n                    margin: '0 auto',\n                    touchAction: 'manipulation'\n                },\n                children: grid.length > 0 && grid[0]?.length > 0 && grid.map((rowArr, row)=>rowArr.map((cell, col)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: `cell ${cell.isRevealed ? 'revealed' : ''} ${cell.isFlagged ? 'flagged' : ''}`,\n                            style: {\n                                border: '1px solid #888',\n                                background: cell.isRevealed ? '#e0e0e0' : '#9e9e9e',\n                                width: '100%',\n                                aspectRatio: '1/1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                fontWeight: 'bold',\n                                fontSize: 'min(6vw, 2.2rem)',\n                                userSelect: 'none',\n                                touchAction: 'manipulation',\n                                boxSizing: 'border-box',\n                                transition: 'background 0.2s'\n                            },\n                            onClick: ()=>handleCellClick(row, col),\n                            onContextMenu: (e)=>handleRightClick(e, row, col),\n                            children: getCellContent(cell)\n                        }, `${row}-${col}`, false, {\n                            fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                            lineNumber: 270,\n                            columnNumber: 13\n                        }, undefined)))\n            }, void 0, false, {\n                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                lineNumber: 251,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"chess-btn bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white font-bold px-5 py-2 rounded-xl shadow transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-offset-2 disabled:opacity-60 mt-4\",\n                onClick: initializeGame,\n                children: \"Restart\"\n            }, void 0, false, {\n                fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n                lineNumber: 296,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/ssoward/sandbox/workspace/kidplay-arcade/games/MindSweep.tsx\",\n        lineNumber: 239,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MindSweep);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/./games/MindSweep.tsx\n");

/***/ })

};
;