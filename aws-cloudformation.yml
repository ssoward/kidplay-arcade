# AWS CloudFormation Template for KidPlay Arcade
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy KidPlay Arcade on AWS EC2 with Auto Scaling'

Parameters:
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues: [t3.micro, t3.small, t3.medium]
    Description: EC2 instance type
  
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair for SSH access

Resources:
  # Security Group
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for KidPlay Arcade web server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  # EC2 Instance
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0c02fb55956c7d316  # Amazon Linux 2 AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y git
          
          # Install Node.js
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
          source ~/.bashrc
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 18
          nvm use 18
          
          # Install PM2
          npm install -g pm2
          
          # Clone and setup the app
          cd /home/ec2-user
          git clone https://github.com/ssoward/kidplay-arcade.git
          cd kidplay-arcade
          npm install
          cd backend && npm install && cd ..
          npm run build
          
          # Copy environment template
          cp .env.example backend/.env
          
          # Start with PM2
          pm2 start ecosystem.config.js
          pm2 save
          pm2 startup
      Tags:
        - Key: Name
          Value: KidPlay-Arcade-Server

Outputs:
  WebsiteURL:
    Description: URL of the KidPlay Arcade website
    Value: !Sub 'http://${WebServerInstance.PublicDnsName}'
  
  PublicIP:
    Description: Public IP address of the web server
    Value: !Ref WebServerInstance
  
  SSHCommand:
    Description: SSH command to connect to the instance
    Value: !Sub 'ssh -i ${KeyPairName}.pem ec2-user@${WebServerInstance.PublicDnsName}'
